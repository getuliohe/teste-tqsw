name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    # Bloco de serviço para iniciar o MySQL
    services:
      mysql:
        image: mysql:5.7
        env:
          # Usa o NOVO secret que você criou para a senha do root
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          # Usa seu secret existente para o nome do banco de dados
          MYSQL_DATABASE: ${{ secrets.DB_TEST_DATABASE }}
          # Cria um usuário e senha para a aplicação usar
          MYSQL_USER: ${{ secrets.DB_TEST_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.DB_TEST_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Wait for MySQL
      run: sudo apt-get install -y mysql-client && until mysqladmin ping -h 127.0.0.1 --silent; do sleep 1; done
      
    - run: npm ci

    - name: Run Migrations
      env:
        # Constrói a URL de conexão usando seus secrets
        DATABASE_URL_TEST: mysql://${{ secrets.DB_TEST_USERNAME }}:${{ secrets.DB_TEST_PASSWORD }}@${{ secrets.DB_HOST }}:3306/${{ secrets.DB_TEST_DATABASE }}
      run: npx sequelize-cli db:migrate --env test

    - run: npm run lint

    - name: Run tests
      env:
        NODE_ENV: test
        # A mesma URL de conexão para os testes
        DATABASE_URL_TEST: mysql://${{ secrets.DB_TEST_USERNAME }}:${{ secrets.DB_TEST_PASSWORD }}@${{ secrets.DB_HOST }}:3306/${{ secrets.DB_TEST_DATABASE }}
      run: npm test